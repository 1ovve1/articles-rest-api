<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\BelongsToMany;
use Illuminate\Database\Eloquent\Relations\HasMany;

class Article extends Model
{
    use HasFactory;

    protected $fillable = [
        'slug', 'user_id', 'title', 'content', 'image_path', 'active'
    ];

    /**
     * @return BelongsToMany
     */
    function users(): BelongsToMany
    {
        return $this->belongsToMany(User::class, Publication::class);
    }

    /**
     * @return BelongsToMany
     */
    function rubrics(): BelongsToMany
    {
        return $this->belongsToMany(Rubric::class, Publication::class);
    }

    /**
     * @return BelongsToMany
     */
    function publications(): HasMany
    {
        return $this->hasMany(Publication::class);
    }

    /**
     * Search models by slug field
     *
     * @return string
     */
    function getRouteKeyName(): string
    {
        return 'slug';
    }

    /**
     * @return Builder
     */
    static function onlyActive(): Builder
    {
        return Article::where('active', true);
    }

    /**
     * @return bool|null
     */
    public function delete()
    {
        $this->publications()->each(fn(Publication $publication) => $publication->delete());
        return parent::delete(); // TODO: Change the autogenerated stub
    }
}
